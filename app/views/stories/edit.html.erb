<h1>Editing story</h1>

<%= render 'form' %>

<%= link_to 'Show', @story %> |
<%= link_to 'Back', stories_path %>
<script>
  $(document).ready(function(){

    $(function() {

      var story_id = document.getElementById('story_id').value;
      $("#tabs").tabs({
        activate: function(event,ui) {
          $("#sig").html("");
          $.ajax({
            url: "update_tabs",
            type: "PUT",
            data: $("#edit_story_"+story_id).serialize(),
            dataType: "script",
            success: function() {
              $("#message").html("Data saved.").show();
              setTimeout("$('#message').fadeOut('slow');",2000);
              console.log("Saved.");
              if (ui.newPanel.attr("id") == "tabs-5") {
                $.ajax({
                  url: "graph_json?id="+story_id,
                  type: "GET",
                  dataType: "json",
                  success: function(data) {
                    if (data["valid"]) {
                      var sigRoot = document.getElementById('sig');
                      var sigInst = sigma.init(sigRoot).drawingProperties({
                        defaultLabelColor: '#ccc',
                        defaultLabelSize: 10,
                        font: 'Arial',
                        edgeColor: 'source',
                        defaultEdgeType: 'curve',
                        defaultEdgeArrow: 'target',
                        labelThreshold: 0
                      }).graphProperties({
                        minNodeSize: 0.5,
                        maxNodeSize: 5,
                        maxEdgeSize: 3
                      }).mouseProperties({
                        maxRatio: 32
                      });

                      var j = 0;
                      var color = 0
                      var color1 = '#ff0000'
                      var color2 = '#00ff00'
                      var color3 = '#ffff00'
                      for (var i=0;i<data["references"].length;i++) {
                        sigInst.addNode('cap'+data["references"][i], {
                          label: 'cap '+data["references"][i],
                          color: color==0 ? color1 : color2,
                          x: j,
                          y: i%2==0 ? j*(-1) : j
                        }).draw();
                        j = j + 0.1
                        color++;
                        if (color==2)
                          color = 0;
                      }

                      for (var k=0;k<data["chapter_destinies"].length;k++) {
                        if ((data["chapter_destinies"][k].length != 0) && data["valid"][k]) {
                          for (var l=1;l<data["chapter_destinies"][k].length;l++) {
                            sigInst.addEdge('cap'+data["chapter_destinies"][k][0]+'_cap'+data["chapter_destinies"][k][l], 'cap'+data["chapter_destinies"][k][0], 'cap'+data["chapter_destinies"][k][l]).draw();
                          }
                        }
                      }
                    }

                  }
                });
              }
            },
            error: function() {
              $("#message").html("Data not saved");
              setTimeout("$('#message').fadeOut('slow');",2000);
            }
          });
        }
          
      });

    });

  });

</script>
